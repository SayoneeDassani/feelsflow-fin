{"ast":null,"code":"try {\n  const {\n    date\n  } = req.query; // Assuming date is passed as a query parameter 'date=YYYY-MM-DD'\n  const startDate = new Date(date);\n  startDate.setHours(0, 0, 0, 0); // Set the start of the day\n\n  const endDate = new Date(date);\n  endDate.setHours(23, 59, 59, 999); // Set the end of the day\n\n  const moods = await Mood.find({\n    date: {\n      $gte: startDate,\n      $lte: endDate\n    }\n  });\n  res.status(200).json(moods);\n} catch (error) {\n  res.status(500).json({\n    message: error.message\n  });\n}","map":{"version":3,"names":["date","req","query","startDate","Date","setHours","endDate","moods","Mood","find","$gte","$lte","res","status","json","error","message"],"sources":["C:/Users/sayod/OneDrive/Desktop/FinalCode/feelsflow/src/components/Resources.js"],"sourcesContent":["try {\r\n    const { date } = req.query; // Assuming date is passed as a query parameter 'date=YYYY-MM-DD'\r\n    const startDate = new Date(date);\r\n    startDate.setHours(0, 0, 0, 0); // Set the start of the day\r\n\r\n    const endDate = new Date(date);\r\n    endDate.setHours(23, 59, 59, 999); // Set the end of the day\r\n\r\n    const moods = await Mood.find({\r\n        date: {\r\n            $gte: startDate,\r\n            $lte: endDate\r\n        }\r\n    });\r\n\r\n    res.status(200).json(moods);\r\n} catch (error) {\r\n    res.status(500).json({ message: error.message });\r\n}"],"mappings":"AAAA,IAAI;EACA,MAAM;IAAEA;EAAK,CAAC,GAAGC,GAAG,CAACC,KAAK,CAAC,CAAC;EAC5B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAAC;EAChCG,SAAS,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMC,OAAO,GAAG,IAAIF,IAAI,CAACJ,IAAI,CAAC;EAC9BM,OAAO,CAACD,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;;EAEnC,MAAME,KAAK,GAAG,MAAMC,IAAI,CAACC,IAAI,CAAC;IAC1BT,IAAI,EAAE;MACFU,IAAI,EAAEP,SAAS;MACfQ,IAAI,EAAEL;IACV;EACJ,CAAC,CAAC;EAEFM,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACP,KAAK,CAAC;AAC/B,CAAC,CAAC,OAAOQ,KAAK,EAAE;EACZH,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IAAEE,OAAO,EAAED,KAAK,CAACC;EAAQ,CAAC,CAAC;AACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}