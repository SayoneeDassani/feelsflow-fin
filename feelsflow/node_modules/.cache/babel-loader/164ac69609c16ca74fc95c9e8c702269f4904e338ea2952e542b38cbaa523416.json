{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayod\\\\OneDrive\\\\Desktop\\\\FinalCode\\\\feelsflow\\\\src\\\\components\\\\MoodTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MoodForm from './MoodForm';\nimport MoodList from './MoodList';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodTracker() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [moods, setMoods] = useState([]);\n  const [isTodayMoodLogged, setIsTodayMoodLogged] = useState(false);\n  useEffect(() => {\n    const fetchMoods = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/moods/${selectedDate.toISOString().split('T')[0]}`);\n        setMoods(response.data);\n        setIsTodayMoodLogged(response.data.length > 0);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMoods();\n  }, [selectedDate]);\n  const handleMoodSubmit = async newMood => {\n    try {\n      await axios.post('http://localhost:5000/api/moods', {\n        ...newMood,\n        date: selectedDate\n      });\n      setMoods([...moods, newMood]);\n      setIsTodayMoodLogged(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mood Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-picker-container\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: date => setSelectedDate(date),\n        inline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsTodayMoodLogged(false),\n        children: \"Log New Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-list\",\n      children: isTodayMoodLogged ? /*#__PURE__*/_jsxDEV(MoodList, {\n        moods: moods\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(MoodForm, {\n        onMoodSubmit: handleMoodSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(MoodTracker, \"b01EtDixvZcHk/JP3RP6Pe/PKDw=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","useEffect","axios","MoodForm","MoodList","DatePicker","jsxDEV","_jsxDEV","MoodTracker","_s","selectedDate","setSelectedDate","Date","moods","setMoods","isTodayMoodLogged","setIsTodayMoodLogged","fetchMoods","response","get","toISOString","split","data","length","error","console","handleMoodSubmit","newMood","post","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","inline","onClick","onMoodSubmit","_c","$RefreshReg$"],"sources":["C:/Users/sayod/OneDrive/Desktop/FinalCode/feelsflow/src/components/MoodTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MoodForm from './MoodForm';\r\nimport MoodList from './MoodList';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction MoodTracker() {\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [moods, setMoods] = useState([]);\r\n    const [isTodayMoodLogged, setIsTodayMoodLogged] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchMoods = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/moods/${selectedDate.toISOString().split('T')[0]}`);\r\n                setMoods(response.data);\r\n                setIsTodayMoodLogged(response.data.length > 0);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchMoods();\r\n    }, [selectedDate]);\r\n\r\n    const handleMoodSubmit = async (newMood) => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/moods', { ...newMood, date: selectedDate });\r\n            setMoods([...moods, newMood]);\r\n            setIsTodayMoodLogged(true);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <h1>Mood Tracker</h1>\r\n            <div className=\"date-picker-container\">\r\n                <DatePicker\r\n                    selected={selectedDate}\r\n                    onChange={(date) => setSelectedDate(date)}\r\n                    inline\r\n                />\r\n                <button onClick={() => setIsTodayMoodLogged(false)}>Log New Mood</button>\r\n            </div>\r\n            <div className=\"mood-list\">\r\n                {isTodayMoodLogged ? (\r\n                    <MoodList moods={moods} />\r\n                ) : (\r\n                    <MoodForm onMoodSubmit={handleMoodSubmit} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoodTracker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,mCAAmCT,YAAY,CAACU,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/GP,QAAQ,CAACI,QAAQ,CAACI,IAAI,CAAC;QACvBN,oBAAoB,CAACE,QAAQ,CAACI,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;MAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IACDP,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,MAAMgB,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IACxC,IAAI;MACA,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,iCAAiC,EAAE;QAAE,GAAGD,OAAO;QAAEE,IAAI,EAAEnB;MAAa,CAAC,CAAC;MACvFI,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEc,OAAO,CAAC,CAAC;MAC7BX,oBAAoB,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKuB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BxB,OAAA;MAAAwB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB5B,OAAA;MAAKuB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBAClCxB,OAAA,CAACF,UAAU;QACP+B,QAAQ,EAAE1B,YAAa;QACvB2B,QAAQ,EAAGR,IAAI,IAAKlB,eAAe,CAACkB,IAAI,CAAE;QAC1CS,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF5B,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMvB,oBAAoB,CAAC,KAAK,CAAE;QAAAe,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACN5B,OAAA;MAAKuB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBhB,iBAAiB,gBACdR,OAAA,CAACH,QAAQ;QAACS,KAAK,EAAEA;MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE1B5B,OAAA,CAACJ,QAAQ;QAACqC,YAAY,EAAEd;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC9C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC1B,EAAA,CAhDQD,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AAkDpB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}